<!--
basic - project
A build script to compile all *.java files in current directory
-->
<project name="basic" default="build" basedir=".">
    <property name="project.version" value="1.0"/>
    <property name="jdk.version" value="11"/>
    <property name="src" location="${basedir}"/>
    <property name="src.main.java" location="${src}"/>
    <property name="src.main.resources" location="${src}"/>
    <property name="src.test.java" location="${src}"/>
    <property name="src.test.resources" location="${src}"/>
    <property name="target" location="${basedir}/target"/>
    <property name="target.main.classes" location="${target}/classes"/>
    <property name="target.test.classes" location="${target}/test-classes"/>
    <property name="target.test.reports" location="${basedir}/test-reports"/>
    <property name="target.javadoc" location="${target}/javadoc"/>
    <property name="lib" location="${basedir}"/>
    <property name="lib.compile" location="${lib}"/>
    <property name="lib.test" location="${lib}"/>

    <path id="main.classpath">
        <pathelement location="${target.main.classes}"/>
        <fileset dir="${lib.compile}" includes="*.jar"/>
    </path>
    <path id="test.classpath">
        <pathelement location="${target.test.classes}"/>
        <path refid="main.classpath"/>
        <fileset dir="${lib.test}" includes="*.jar"/>
    </path>

    <target name="download">
        <mkdir dir="${lib.compile}"/>
        <mkdir dir="${lib.test}"/>

        <get src="https://repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar" dest="${lib.compile}"/>
        <get src="https://repo1.maven.org/maven2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar" dest="${lib.compile}"/>
        <get src="https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar" dest="${lib.compile}"/>

        <get src="https://repo1.maven.org/maven2/junit/junit/4.12/junit-4.12.jar" dest="${lib.test}"/>
        <get src="https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" dest="${lib.test}"/>
        <get src="https://repo1.maven.org/maven2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar" dest="${lib.test}"/>
    </target>

    <target name="init">
        <tstamp/>
        <mkdir dir="${target.main.classes}"/>
        <mkdir dir="${target.test.classes}"/>
    </target>

    <target name="clean" description="clean up">
        <delete dir="${target}"/>
    </target>

    <target name="compile" depends="init" description="Compile main source files">
        <copy todir="${target.main.classes}">
            <fileset dir="${src.main.resources}" includes="**/*" excludes="**/*.java"/>
        </copy>
        <javac srcdir="${src.main.java}" destdir="${target.main.classes}" classpathref="main.classpath"
               includeantruntime="false" compiler="modern" release="${jdk.version}">
        </javac>
    </target>
    <target name="compile-test" depends="compile" description="Compile test source files">
        <copy todir="${target.test.classes}">
            <fileset dir="${src.test.resources}" includes="**/*" excludes="**/*.java"/>
        </copy>
        <javac srcdir="${src.test.java}" destdir="${target.test.classes}" classpathref="test.classpath"
               includeantruntime="false" compiler="modern" release="${jdk.version}">
        </javac>
    </target>

    <target name="test" depends="compile-test" description="Run junit tests">
        <mkdir dir="${target.test.reports}"/>
        <junit printsummary="yes" haltonfailure="yes" tempdir="${target}">
            <classpath refid="test.classpath">
            </classpath>
            <formatter type="plain"/>
            <batchtest fork="yes" todir="${target.test.reports}">
                <fileset dir="${src.test.java}">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="javadoc" depends="init" description="Generate javadoc">
        <javadoc sourcepath="${src.main.java}" destdir="${target.javadoc}"/>
    </target>

    <target name="build" depends="compile" description="Generate distribution package">
        <jar jarfile="${target}/${ant.project.name}-${project.version}.jar" basedir="${target.main.classes}"/>
    </target>
</project>
